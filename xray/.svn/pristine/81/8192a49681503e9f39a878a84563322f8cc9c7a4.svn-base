<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0 Transitional//EN">
<!-- saved from url=(0050)http://www.boost.org/libs/graph/doc/bandwidth.html -->
<HTML><HEAD><TITLE>Boost Graph Library: Bandwidth</TITLE>
<META http-equiv=Content-Type content="text/html; charset=windows-1252"><!--
  -- Copyright (c) Jeremy Siek 2000
  --
  -- Permission to use, copy, modify, distribute and sell this software
  -- and its documentation for any purpose is hereby granted without fee,
  -- provided that the above copyright notice appears in all copies and
  -- that both that copyright notice and this permission notice appear
  -- in supporting documentation.  Silicon Graphics makes no
  -- representations about the suitability of this software for any
  -- purpose.  It is provided "as is" without express or implied warranty.
  -->
<META content="MSHTML 6.00.2715.400" name=GENERATOR></HEAD>
<BODY text=#000000 vLink=#551a8b aLink=#ff0000 link=#0000ee bgColor=#ffffff>
<IMG SRC="../../../c++boost.gif" 
     ALT="C++ Boost" width="277" height="86"> <BR>
<H1><A name=sec:bandwidth></a><tt>ith_wavefront</tt> </H1>
<PRE>  (1)
  template &lt;typename Graph&gt;<br>  typename graph_traits&lt;Graph&gt;::vertices_size_type<br>  ith_wavefront(typename graph_traits&lt;Graph&gt;::vertex_descriptor i,<br>                const Graph&amp; g)

  (2)
  template &lt;typename Graph, typename VertexIndexMap&gt;<br>  typename graph_traits&lt;Graph&gt;::vertices_size_type<br>  ith_wavefront(typename graph_traits&lt;Graph&gt;::vertex_descriptor i,<br>                const Graph&amp; g,<br>                VertexIndexMap index)</PRE>
<p>&nbsp;</p>
<p>Calculates the wavefront of the <i>ith</i>-vertex.<BR>
  <BR>
</p>
<H3>Defined in</H3>
<A 
href="http://www.boost.org/boost/graph/bandwidth.hpp"><TT>boost/graph/wavefront.hpp</TT></A> 
<HR>

<H1><A name=sec:ith-bandwidth></a><tt>max_wavefront</tt></H1>
<PRE>  (1)
  template &lt;typename Graph&gt;<br>  typename graph_traits&lt;Graph&gt;::vertices_size_type<br>  max_wavefront(const Graph&amp; g)

  (2)
  template &lt;typename Graph, typename VertexIndexMap&gt;<br>  typename graph_traits&lt;Graph&gt;::vertices_size_type<br>  max_wavefront(const Graph&amp; g, VertexIndexMap index)</PRE>
Calculates the maximum wavefront a graph.<BR>
<BR>
<H3>Defined in</H3>
<p><A 
href="http://www.boost.org/boost/graph/bandwidth.hpp"><TT>boost/graph/wavefront.hpp</TT></A> 
</p>
<hr>
<h1><a name=sec:ith-bandwidth></a><tt>aver_wavefront</tt></h1>
<pre>  (1)
  template &lt;typename Graph&gt;<br>  typename graph_traits&lt;Graph&gt;::vertices_size_type<br>  aver_wavefront(const Graph&amp; g)

  (2)
  template &lt;typename Graph, typename VertexIndexMap&gt;<br>  typename graph_traits&lt;Graph&gt;::vertices_size_type<br>  aver_wavefront(const Graph&amp; g, VertexIndexMap index)</pre>
Calculates the average wavefront of a graph (sum of all wavefronts devided by 
the number ob vertices).<br>
<br>
<h3>Defined in</h3>
<a 
href="http://www.boost.org/boost/graph/bandwidth.hpp"><tt>boost/graph/wavefront.hpp</tt></a> 
<p><BR>
</p>
<hr>
<h1><a name=sec:ith-bandwidth></a><tt>rms_wavefront</tt></h1>
<pre>  (1)
  template &lt;typename Graph&gt;<br>  typename graph_traits&lt;Graph&gt;::vertices_size_type<br>  rms_wavefront(const Graph&amp; g)

  (2)
  template &lt;typename Graph, typename VertexIndexMap&gt;<br>  typename graph_traits&lt;Graph&gt;::vertices_size_type<br>  rms_wavefront(const Graph&amp; g, VertexIndexMap index)</pre>
Calculates the root mean square of all wavefronts.<br>
<br>
<h3>Defined in</h3>
<a 
href="http://www.boost.org/boost/graph/bandwidth.hpp"><tt>boost/graph/wavefront.hpp</tt></a> 
<p>&nbsp; </p>
<HR>
<TABLE>
  <TBODY>
  <TR vAlign=top>
    <TD noWrap>Copyright © 2001-2002</TD>
    <TD>Marc Wintermantel, ETH Zurich(<A 
      href="mailto:wintermantel@imes.mavt.ethz.ch">wintermantel@imes.mavt.ethz.ch</a>) 
    </TD>
  </TR></TBODY></TABLE></BODY></HTML>
