<html>
<head>
	<title>BOOST_PP_EXPR_IF</title>
	<link rel="stylesheet" type="text/css" href="../styles.css">
</head>
<body>
	<div style="margin-left:  0px;">
		The <b>BOOST_PP_EXPR_IF</b> macro expands to its second argument if its first argument is non-zero or expands to nothing otherwise.
	</div>
	<h4>Usage</h4>
		<div class="code">
			<b>BOOST_PP_EXPR_IF</b>(<i>cond</i>, <i>expr</i>)
		</div>
	<h4>Arguments</h4>
		<dl>
			<dt>cond</dt>
			<dd>
				The condition that determines if the result is <i>expr</i> or nothing.&nbsp;
				Valid values range from <i>0</i> to <b>BOOST_PP_LIMIT_MAG</b>.
			</dd>
			<dt>expr</dt>
			<dd>
				The result of the expansion if <i>cond</i> is non-zero.
			</dd>
		</dl>
	<h4>Remarks</h4>
		<div>
			This macro performs a boolean conversion on its first argument.&nbsp;
			If that conversion is unnecessary, use <b>BOOST_PP_EXPR_IIF</b> instead.
		</div>
	<h4>See Also</h4>
		<ul>
			<li><a href="expr_iif.html">BOOST_PP_EXPR_IIF</a></li>
			<li><a href="limit_mag.html">BOOST_PP_LIMIT_MAG</a></li>
		</ul>
	<h4>Requirements</h4>
		<div>
			<b>Header:</b> &nbsp;<a href="../headers/control/expr_if.hpp.html">&lt;boost/preprocessor/control/expr_if.hpp&gt;</a>
		</div>
	<h4>Sample Code</h4>
<div><pre>
#include &lt;<a href="../headers/control/expr_if.hpp.html">boost/preprocessor/control/expr_if.hpp</a>&gt;
#include &lt;<a href="../headers/tuple/elem.hpp.html">boost/preprocessor/tuple/elem.hpp</a>&gt;

#define CV(n) \
   <a href="expr_if.html">BOOST_PP_EXPR_IF</a>( \
      n, \
      <a href="tuple_elem.html">BOOST_PP_TUPLE_ELEM</a>( \
         4, n, \
         (..., const, volatile, const volatile) \
      ) \
   ) \
   /**/

CV(0) // expands to nothing
CV(1) // expands to const
</pre></div>
</body>
</html>
