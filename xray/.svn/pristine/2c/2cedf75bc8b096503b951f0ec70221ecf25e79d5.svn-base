<html>
<head>
	<title>BOOST_PP_LIST_FIRST_N</title>
	<link rel="stylesheet" type="text/css" href="../styles.css">
</head>
<body>
	<div style="margin-left:  0px;">
		The <b>BOOST_PP_LIST_FIRST_N</b> macro expands to a <i>list</i> of the first <i>count</i> elements of a <i>list</i>.
	</div>
	<h4>Usage</h4>
		<div class="code">
			<b>BOOST_PP_LIST_FIRST_N</b>(<i>count</i>, <i>list</i>)
		</div>
	<h4>Arguments</h4>
		<dl>
			<dt>count</dt>
			<dd>
				The number of elements to extract.
			</dd>
			<dt>list</dt>
			<dd>
				The <i>list</i> from which the elements are extracted.
			</dd>
		</dl>
	<h4>Remarks</h4>
		<div>
			This macro extracts <i>count</i> elements from the beginning of <i>list</i> and returns them as a <i>list</i>
		</div>
		<div>
			Previously, this macro could not be used inside <b>BOOST_PP_WHILE</b>.&nbsp;
			There is no longer any such restriction.&nbsp;
			It is more efficient, however, to use <b>BOOST_PP_LIST_FIRST_N_D</b> in such a situation.
		</div>
	<h4>See Also</h4>
		<ul>
			<li><a href="list_first_n_d.html">BOOST_PP_LIST_FIRST_N_D</a></li>
		</ul>
	<h4>Requirements</h4>
		<div>
			<b>Header:</b> &nbsp;<a href="../headers/list/first_n.hpp.html">&lt;boost/preprocessor/list/first_n.hpp&gt;</a>
		</div>
	<h4>Sample Code</h4>
<div><pre>
#include &lt;<a href="../headers/list/first_n.hpp.html">boost/preprocessor/list/first_n.hpp</a>&gt;

#define LIST (a, (b, (c, <a href="nil.html">BOOST_PP_NIL</a>)))

<a href="list_first_n.html">BOOST_PP_LIST_FIRST_N</a>(2, LIST) // expands to (a, (b, <a href="nil.html">BOOST_PP_NIL</a>))
</pre></div>
</body>
</html>
